uploadingGuide:
  name: Load a Project
  link: /projects/uploading
  short_intro: >
    Learn how to load your own project.
  description: >
    Load your own project by clicking on file in the upper left and clicking on upload from your computer like in the video below.
    <iframe src="https://giphy.com/embed/MnENzrnuG25R8fmyM9" width="480" height="312" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p><a href="http://www.giphy.com/gifs/MnENzrnuG25R8fmyM9"></a></p>
  cover_photo: /images/ext-images/upload.png


sentiment:
  name: Make Me Happy 
  link: /projects/sentiment
  short_intro: > 
    Learn how to make Nary react to your messages! 
  description: >
    Learn how to make Nary react to your messages! 
  cover_photo: /images/ext-images/make-me-happy.png
  video: >
    <iframe src="https://giphy.com/embed/bwPqG9tW2avzalpu4S" width="480" height="305" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
  resources:
    # - description: Purchase Circuit Stickers and activity kits
    #   url: "https://chibitronics.myshopify.com/collections"
    download_link: https://drive.google.com/uc?export=download&id=16duocSstaQBd_7KW17-Rs6H49r797u-f
    age_range: 7 and older
    group_size: Variable, limited only by amount of supplies and number of facilitators
    facilitators: 0 or more
    facilitator_skills: Basic familiarity with AI concepts
    activity_type: Activities range from single-user guided activities to workshops/classroom lesson plans designed for groups of children
    session_length: Varies, from short (~30 minute) single activities to 90 minutes workshops
    cost: Varies, Circuit Sticker packs and kits range from $30 for a starter kit to $110 (for a classroom pack that includes materials for 30 kids); Books and templates are free to download!
    supplies: Arts and craft supplies, Circuit Stickers, coin batteries; some activities require additional supplies
    guide:
  #     - step: > 
  #         Step 1: Load the simple version of Make Me Happy <a href=https://drive.google.com/uc?export=download&id=16duocSstaQBd_7KW17-Rs6H49r797u-f>here</a>. If it is loud where you are, the speech extension may not work properly. Try loading <a href=https://drive.google.com/uc?export=download&id=1w6S-M8OuQ2unS6VlH33ZncbJDK2TFUXt>this</a> version instead. 
  #     - step: >
  #         Step 2: Run the program by clicking on the green flag. How does the Nary respond? What do you need to tell him for him to be happy?
  #       photo: /images/projects/make-me-happy/make-me-happy-2.png
  #     - step: >
  #         Step 3: That's not really fun is it? Let's see if we can make him happy (or sad) depending on the feeling of the message we type him. Start by loading the <a href="/cognimates-website/extensions/feelings">Feelings extension</a>.
  #       photo: images/projects/make-me-happy/make-me-happy-3.png
  #     - step: >
  #         Step 4: Using one of the blocks from the Feelings extension, we can checking the feeling or mood of our message. Can you guess which one block we should use?
  #       photo: images/projects/make-me-happy/make-me-happy-4.png
  #     - step: >
  #         Step 5: Now insead of directly checking our answer word for word, we can see if our message is happy or not. Replace your answer variable with another block from feelings. Now you're done! Try it out yourself and see what other modifications you can make using some of our other extensions.
  #       photo: images/projects/make-me-happy/make-me-happy-5.png
  # photos:
    # - /images/.jpg
    # - /images/circuit_stickers_origami.jpg
    # - /images/circuit_stickers_map.jpg
    # - /images/circuit_stickers_workshop.jpg

rock:
  name: Rock, Paper, Scissors
  link: /projects/rock
  short_intro: >
    Learn how to play rock, paper, scissors with your computer!
  description: >
    Train your computer to recognize photos of your and play rock, paper, scissors!
  cover_photo: /images/ext-images/Hands.png
  video: >
    <iframe src="https://giphy.com/embed/3OpasCcdF2L0h3J1Sz" width="480" height="216" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
  resources:
    download_link: https://drive.google.com/uc?export=downloads&id=1WBKgxyGY7f58blMBXhZJpLqejfQ9gxk8
    guide:
      # - step: >
      #     Step 1: Download Rock Paper Scissors <a href=https://drive.google.com/uc?export=download&id=1WBKgxyGY7f58blMBXhZJpLqejfQ9gxk8>here</a>
      #   photo: /images/projects/rock/rock-1.png
      # - step: >
      #     Step 2: This project uses the <a href="/cognimates-website/extensions/vision">Vision extension</a>, which is a model you can train to recognize images. 
      #             <img src = "https://imgur.com/wxe3rOF.png"/ class="wide-photo">    
      # - step: >
      #     Step 3: Click the green flag and hold your hand up to the webcam to play rock, paper, scissors with your computer! Your computer will attempt to recognize what move you played and compare it to a move that the computer randomly chose.
      #             <img src= "https://i.imgur.com/wlpxZKH.png"/ class="wide-photo">
      # - step: >
      #     Step 4: Sometimes our computer doesn't recognize what our move is. 
      #             <img src= "https://i.imgur.com/8gvcIRA.png"/ class="wide-photo">
      # - step: >
      #     Step 5: We can fix this problem by adding the new example that we just took with our webcam and adding it to the classifier and retrain our model! Let's start by adding broadcast blocks at the end of our scoring blocks in the "you" sprite.
      #             <img src= "https://i.imgur.com/F3BZayo.png"/ class="wide-photo">   
      # - step: >
      #     Step 6: Next we need a "When I receive training" block in the "computer" sprite so that we can begin training at the end of every round.       
      #             <img src= "https://i.imgur.com/EkKpfDL.png"/ class="wide-photo">
      # - step: >
      #     Step 7: Let's use another events block that will trigger everytime we press the "t" key. Let's have the computer ask us what move we actually played.
      #             <img src= "https://i.imgur.com/7dtGVYE.png"/ class="wide-photo">     
      # - step: >
      #     Step 8: Using another block from the Vision extension, we can add our webcam photo to the category we just entered in our model.
      #             <img src= "https://i.imgur.com/DFhF55y.png"/ class="wide-photo">   
      # - step: >
      #     Step 9: Now we can send our own example back to the model to retrain and hopefully improve it!             
      #             <img src= "https://i.imgur.com/OJygTNO.png"/ class="wide-photo"><p></p>
      #             <img src= "https://i.imgur.com/miZGtpu.png"/ class="wide-photo">

twitter:
 name: Check up on Twitter
 link: /projects/twitter
 short_intro: >
   Learn how to find the mood of tweets!
 description: >
   Learn how to find the mood of your favorite Twitter user with the Twitter, Feelings, and Music extensions.
 cover_photo: /images/ext-images/twitter-ext.png
 video: 
  <iframe src="https://giphy.com/embed/2ytmpbmPuOoDHcHMwp" width="480" height="316" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
 resources:
  download_link: https://drive.google.com/uc?export=download&id=1orWD6nTgykORvnYatj1lIONLmMB0_W_5 
  # guide:
  #   - step: >
  #       Step 1: We will start with just a stationary thinking emoji.<br>
  #                 <img src = "https://i.imgur.com/HMQzR0M.png"/ class="wide-photo">
  #   - step: >
  #       Step 2: To make this more interesting, we can use the <a href="/cognimates-website/extensions/twitter">Twitter</a> to get the last tweet from someone. Then use a block from the <a href="/cognimates-website/extensions/feelings">Feelings extension</a> to check on the mood of the Tweet. <br>
  #                 <img src="https://imgur.com/UbWZMPk.png"/ class="wide-photo">
  #   - step: >
  #       Step 3: We can combine both the Twitter and the Feelings extensions so that we get the mood of a tweet.
  #                 <img src="https://i.imgur.com/0BPBzX0.png"/ class="wide-photo">
  #   - step: >
  #       Step 4: Now that we can get the mood of the tweet, we can change the costume of the emoji to make it happy or sad, make the emoji move up or down for the mood. We can also move the emoji to show the mood.<br>
  #                 <img src="https://i.imgur.com/Azt5FJS.png"/ class="wide-photo">
  #   - step: >
  #       Step 5: Finally, you can add in some blocks from the music extension to play some happy, sad, or neutral notes depending on the mood we received from the tweet. <br>
  #                 <img src="https://i.imgur.com/iFSMJFF.png"/ class="wide-photo">

#ghosts_speech:
# name: Save Me from the Ghosts!
#  link: /projects/ghosts_speech
#  short_intro: >
#    Save Dot from the scary ghosts with math! 
#  description: >
#    The scary ghosts are after Dot and want to scare him away. The only way to not have him leave is to do some math problems. Do some basic addition, multiplication, subtraction, and division to keep him happy!  
#  cover_photo: /images/ext-images/ghosts_speech.png
#  resources:
#    download_link: https://drive.google.com/uc?export=download&id=1xYt9BmgAPjRsdhZ1l-JSjqSREElDfMe7

cozmo_simple:
  name: Cozmo's Fresh Moves
  link: /projects/cozmo_simple
  short_intro: >
    Check out some of Cozmo's moves!
  description: >
    Check out some of the moves that Cozmo can do! Use this starter project to learn a bit about Cozmo and watch him pick up blocks.
  cover_photo: /images/ext-images/cozmo_ext.png
  video: >
    <iframe src="https://player.vimeo.com/video/269392318" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe><p><a href="https://vimeo.com/269392318">Simple Cozmo Demo</a> from <a href="https://vimeo.com/user84996108">Cognimates</a> on <a href="https://vimeo.com">Vimeo</a>.</p>
  resources:
    download_link: https://drive.google.com/uc?export=download&id=1L-z9er93zIxJVXhsoYAagY8fxdy1fa23
    # guide:
    # - step: >
    #     Step 1: This project uses the <a href="/cognimates-website/extensions/cozmo">Cozmo extension</a>. It lets you connect to and program Cozmo!
    #             <img src="https://imgur.com/rKWMtxM.png"/ class="wide-photo">
    # - step: >
    #     Step 2: First we need to connect to Cozmo through bluetooth.
    #             <img src="https://i.imgur.com/bGxMFAT.png"/ class="wide-photo">
    # - step: >
    #     Step 3: Next, you can make Cozmo react when you press the space key on your keyboard.
    #             <img src="https://i.imgur.com/DROgNw7.png"/ class="wide-photo">
    # - step: >
    #     Step 4: Now, let’s make Cozmo pick up a block. If you press the “p” key on your keyboard he will find and pick up a block.

# cozmo_hue:
#   name: How was your day?
#   link: /projects/cozmo_hue
#   short_intro: >
#     Tell Cozmo about your day and watch him and smart lights react to your response!
#   description: >
#     This uses the cozmo extension, the smart lights extension, and the sentiment extension. By combining these extensions, you can create something that will respond to your day! If you are having trouble connecting to your Hue Lights or Cozmo, check out the extensions pages for instructions on how to connect to these devices.
#   cover_photo: /images/ext-images/hue-lights.png
#   video: >
#     <iframe src="https://player.vimeo.com/video/269392411" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe><p><a href="https://vimeo.com/269392411">Simple Cozmo Smart Lights Demo</a> from <a href="https://vimeo.com/user84996108">Cognimates</a> on <a href="https://vimeo.com">Vimeo</a>.</p>
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=1RJh-346OXv4tezbITpfid5OkyacR36SE
#     guide:
#      - step: >
#          Step 1: This project uses the <a href="/cognimates-website/extensions/cozmo">Cozmo extension</a>, which lets you connect to and program Cozmo, and the <a href="/cognimates-website/extensions/smartLights">smart lights extension</a>.
#                  <img src="https://imgur.com/QWDGp5Z.png"/ class="wide-photo">
#      - step: >
#          Step 2: First we have to connect to Cozmo and set out lights to the color red.
#                  <img src="https://i.imgur.com/6QOnx0A.png"/ class="wide-photo">
#      - step: >
#          Step 3: Now we make it ask how your day was. Then, it gets the feeling of the answer.
#                  <img src="https://i.imgur.com/dYrjE3J.png"/ class="wide-photo">
#      - step: >
#          Step 4: We can add blocks from the cozmo and smart light extension to make them react to the feeling of the answer.
#                  <img src="https://i.imgur.com/FTyPSBM.png"/ class="wide-photo">


# recognizePuppy:
#   name: Is it a puppy?
#   link: /projects/recognizePuppy
#   short_intro: >
#     Play a game and test this puppy recognizer!
#   description: >
#     Play a game against this puppy recognizer! When the recognizer correctly identifies a webcam photo of a drawing or your surroundings as a puppy or not a puppy, the computer gets a point. If it is wrong, you get a point. This game is smart, though, because you can train it with the pictures you take! 
#   cover_photo: /images/ext-images/pup.png
#   video: >
#     <iframe src="https://giphy.com/embed/NmGbJwLl7Y4lG" width="480" height="270" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p><a href="https://giphy.com/gifs/NmGbJwLl7Y4lG"></a></p>
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=16PqHmLq2SKph5eTxzGmsb5PZ2Juscwu2
#     age_range: 7 and older
#     group_size: Variable, limited only by amount of supplies and number of facilitators
#     facilitators: 0 or more
#     facilitator_skills: Basic familiarity with AI concepts
#     activity_type: Activities range from single-user guided activities to workshops/classroom lesson plans designed for groups of children
#     session_length: Varies, from short (~30 minute) single activities to 90 minutes workshops
#     cost: Varies, Circuit Sticker packs and kits range from $30 for a starter kit to $110 (for a classroom pack that includes materials for 30 kids); Books and templates are free to download!
#     supplies: Arts and craft supplies, Circuit Stickers, coin batteries; some activities require additional supplies

myFavoriteThings:
  name: My Favorite Things
  link: /projects/myFavoriteThings
  short_intro: >
    Teach Alexa your favorite things!
  description: >
    Learn how to teach Alexa about your favorite things, then ask her about them! 
  cover_photo: /images/ext-images/alexa_faves.png
  video: >
    <iframe src="https://player.vimeo.com/video/269392197" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe><p><a href="https://vimeo.com/269392197">Simple Alexa Demo</a> from <a href="https://vimeo.com/user84996108">Cognimates</a> on <a href="https://vimeo.com">Vimeo</a>.</p>
  resources:
    download_link: https://drive.google.com/uc?export=download&id=1WvVJifDkpQR0QeEjVrye4izosjxZdX1j
    # guide:
    #   - step: >
    #       Step 1: Start by loading the project. 
    #               <img src = "https://imgur.com/XylpLj1.png"/ class="wide-photo">
    #   - step: >
    #       Step 2: This project uses our <a href="/cognimates-website/extensions/alexa">Alexa</a> extension. Tell Alexa to "Open personal chatbot"
    #               <img src = "https://imgur.com/eLvb7KE.png"/ class="wide-photo">          
    #   - step: >
    #       Step 3: Create an account by setting the username and password for yourself. Then access that account.
    #               <img src = "https://imgur.com/8E9JiW9.png"/ class="wide-photo">
    #   - step: >
    #       Step 4: Click the green flag and the Alexa on your screen will return to you an access code. Say "Connect" to your physical Alexa, followed by the access code. This will allow you to program your Alexa!
    #               <img src = "https://imgur.com/NVIZzWv.png"/ class="wide-photo">   
    #   - step: >
    #       Step 5: Let's try to teach her our favorite band!          
    #               <img src = "https://imgur.com/5aRVKRr.png"/ class="wide-photo">   
    #               <br>Ask Alexa what your favorite band is and hear what else she has to say! What else could you teach Alexa?

emotionsVision:
  name: i-Ball's Emotions
  link: /projects/emotionsVision
  short_intro: >
    Teach i-Ball to recognize if you're happy or sad.
  description: >
    Play around with i-Ball who uses a trained classifier to guess whether you're happy or sad from the way you look.
  cover_photo: /images/ext-images/emotions.png
  video:
    <iframe src="https://giphy.com/embed/31UNMfnS5YFleNFn87" width="640" height="478" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
  resources:
    download_link: https://drive.google.com/uc?export=download&id=1x1jYBnZemLtf9u87PwY0BJZFc04aMSda

shakespeareKerouac:
  name: Recognize a Writer
  link: /projects/shakespeareKerouac
  short_intro: >
    See if a sentence sounds more like Shakespeare or Kerouac!<br>
    Project Credits - William Mitchell
  description: >
    See if a sentence sounds more like Shakespeare or Kerouac.
  cover_photo: /images/ext-images/books.png
  video:
    <iframe src="https://giphy.com/embed/31UNMfnS5YFleNFn87" width="480" height="303" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
  resources:
    download_link: https://drive.google.com/uc?export=download&id=1jQvBiTtu1UNMJdXE0X7KtOf4RQl7bVA7

husky:
  name: Husky or Malamute?
  link: /projects/husky
  short_intro: >
    Is that doggo a husky or a malamute?<br>
    Project Credits - Eunyoung Lee
  description: >
    Can you create a project that can identify a husky and a malamute? They look very similar, so train your classifier well! Put your Train AI keys into the blocks in codelab to check them out.
  cover_photo: /images/ext-images/husky.png
  video: >
    <iframe src="https://giphy.com/embed/8YyZlnVOeUmMf5rGuF" width="480" height="216" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p><a href="https://giphy.com/gifs/ai-vision-cognimates-8YyZlnVOeUmMf5rGuF"></a></p>
  resources:
    download_link: https://drive.google.com/uc?export=download&id=1T5L4Xw7FIWmzeLgUHOh5qAQgJi89wFDb

# clarifaiDino:
#   name: The Clarifai Dinosaur
#   link: /projects/clarifaiDino
#   short_intro: >
#     Play with this dino and see if he can recognize images!
#   description: >
#     Can this dinosaur recognize images you take with your webcam? How do you think he recognizes your images? Why does he come up with so many possibilites?
#   cover_photo: /images/ext-images/clarifaiDino.png
#   video: >
#     <iframe src="https://giphy.com/embed/vrKUtJNMtB3Y4" width="480" height="349" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=1yz3JJxnA_c-5bKdWatY9CnbtoAVSLyFy
#     guide:
#       - step: >
#           Step 1: Start by loading the project.
#                   <img src = "https://imgur.com/yubOzt6.png"/ class="wide-photo">
#       - step: >
#           Step 2: This project uses the <a href= "/cognimates-website/extensions/clarifai">Clarifai extension</a>, which can recognize objects from a photo that your webcam takes.
#                   <img src = "https://imgur.com/ucnhnlG.png"/ class="wide-photo">
#       - step: >
#           Step 3: Click the green flag to play with the dinosaur! He will take a photo with the webcam on your laptop and try to recognize the objects that he sees. Then, he will tell you his predictions one by one and he gets a point if he is right. 
#                   <img src = "https://imgur.com/l9ME8HV.png"/ class="wide-photo">       
#                   <br>How did you do against the dinosaur?  

twitter_wemo:
  name: Make a Wemo Plug react to Tweets!
  link: /projects/twitter_wemo
  short_intro: >
    Make a Wemo Plug react to Tweets! Use the sentiment, wemo, and twitter extensions. 
  description: >
    Make a Wemo Plug react to Tweets! Use the sentiment, wemo, and twitter extensions. 
  cover_photo: /images/ext-images/wemo_twitter.png
  video: >
    <iframe src="https://player.vimeo.com/video/269392274" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe><p><a href="https://vimeo.com/269392274">Simple Cognimates Wemo</a> from <a href="https://vimeo.com/user84996108">Cognimates</a> on <a href="https://vimeo.com">Vimeo</a>.</p>
  resources:
    download_link: https://drive.google.com/uc?export=download&id=1W-VffmjMc2I5qT2p-UobHD050oILcPcQ
    guide:
      # - step: >
      #     Step 1: Start by loading the project.
      #             <img src = "https://imgur.com/St4CgZA.png"/ class="wide-photo"> 
      # - step: >
      #     Step 2: This project uses the <a href="/cognimates-website/extensions/wemo">wemo</a>, <a href="/cognimates-website/extensions/twitter">twitter</a>, and <a href="/cognimates-website/extensions/feelings">feelings</a> extension to light a Wemo based on the feelings of a tweet.
      #             <img src = "https://imgur.com/7LY5fPM.png"/ class="wide-photo"> 
      # - step: >
      #     Step 3: Control the Wemo's lights based on the feeling of a tweet! Make the Wemo turn on when it's happy and off when it's sad.
      #             <img src = "https://imgur.com/MAQ5fMN.png"/ class="wide-photo">  
      #             <br>How does the program know the feelings of a tweet? What do you think happens when the tweet isn't happy or sad, but neutral?     


# jellyfishSwim:
#   name: Jellyfish Swim
#   link: /projects/jellyfishSwim
#   short_intro: >
#     Keep the jellyfish in the frame through your words!
#   description: >
#     Try to control the motion of the jellyfish by saying good and bad things to it. Good things cause it to float up and bad things cause it to sink down. Try to keep him inside his frame!
#   cover_photo: /images/ext-images/jellyfish.png
#   video: >
#     <iframe src="https://giphy.com/embed/2aQ0dVUk1Geisr5XUT" width="480" height="221" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=14RZWCKQRkIjGhV1i3kIH5ker4llQ1G50
#     age_range: 7 and older
#     group_size: Variable, limited only by amount of supplies and number of facilitators
#     facilitators: 0 or more
#     facilitator_skills: Basic familiarity with AI concepts
#     activity_type: Activities range from single-user guided activities to workshops/classroom lesson plans designed for groups of children
#     session_length: Varies, from short (~30 minute) single activities to 90 minutes workshops
#     cost: Varies, Circuit Sticker packs and kits range from $30 for a starter kit to $110 (for a classroom pack that includes materials for 30 kids); Books and templates are free to download!
#     supplies: Arts and craft supplies, Circuit Stickers, coin batteries; some activities require additional supplies

goodBoy:
  name: Good Boy
  link: /projects/goodBoy
  short_intro: >
    Say something nice to your dog, or something mean, or something backhanded.
  description: >
    Say something to your dog and our text classification extension will recognize it as either good, bad, or even backhanded!
  cover_photo: /images/ext-images/dog.png
  video: >
    <iframe src="https://giphy.com/embed/3NshHY3VzstD4csrrD" width="480" height="326" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
  resources:
    download_link: https://drive.google.com/uc?export=download&id=1yXY-ZFlqYsNufdCsGADG-waHfFGi_wIn
    # guide: 
    #   - step: >
    #       Step 1: Start by loading our starter project for Good Boy. You can download it <a href="https://drive.google.com/uc?export=download&id=1yXY-ZFlqYsNufdCsGADG-waHfFGi_wIn"> here</a>.
    #               <img src = "https://imgur.com/r6Np1Mg.png"/ class="wide-photo">
    #   - step: >
    #       Step 2: Click on the green flag and see what happens when you say, "Good boy!" Or, how about when you say, "Bad boy!" How does the puppy react?
    #               <img src = "https://imgur.com/DoIKc5T.png"/ class="wide-photo">
    #   - step: >
    #       Step 3: What if we wanted to say other things besides "Good boy" or "Bad boy"? Using our Text extension, we can use a text classifier to recognize whether your message is good or bad. Start by loading the <a href="/cognimates-website/extensions/text">Text extension</a>.
    #               <img src = "https://imgur.com/zZJappa.png"/ class="wide-photo">
    #   - step: >
    #       Step 4: Using one of the blocks from the Text extension we can recognize whether or not our speech is good or bad. Can you guess which one that might be?<br>
    #               <img src = "https://imgur.com/tKk2zdU.png"/ class="wide-photo">
    #   - step: >
    #       Step 5: In order for our puppy to know when to start recognizing our speech, we need to first set the id of the classifier (recognizer) that we will use. Then, we can have our puppy tell us whether he recognizes your message as good or bad, by using a Say block from Looks.
    #               <img src = "https://imgur.com/kygZA8U.png"/ class="wide-photo">
    #   - step: >
    #       Step 6: Instead of having the puppy reacting to what it hears, we can now have him react to what kind of message he recognizes. For that we can use the "When text is" block for when the message is good, or for when it is bad. 
    #               <img src = "https://imgur.com/CuCdyQ7.png"/ class="wide-photo">
    #   - step: >
    #       Step 7: Let's try one more thing. How about having our puppy also react to backhanded compliments? Luckily, our model can differentiate between good, bad, and backhanded comments.<br>
    #               <img src = "https://imgur.com/pnQ0mgR.png"/ class="wide-photo">          

# smartLights:
#   name: Smart lights
#   link: /projects/smartLights
#   short_intro: >
#     Program your smart lights to react to how you're feeling.
#   description: >
#     Program your smart lights to react to how you're feeling. Find instructions for connecting to Smart Lights at the Smart Lights extension page!
#   cover_photo: /images/ext-images/hue.JPG
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=1rWPU_6Xi6rqsiON6nIMSjLuIiS2fSMh0
#     guide:
#       - step: >
#           Step 1: Start by loading our starter project for Smart lights. You can download it <a href="https://drive.google.com/uc?export=download&id=1WfdCzakpQPz4jnaPt8jY47w6kNkEVVJx"> here</a>.
#                   <img src = "https://imgur.com/krXWpwv.png"/ class="wide-photo">    
#       - step: >
#           Step 2: Right now, the lights are only reacting to specific phrases. How can we make it react to the mood of our response? Let's load the <a href="/cognimates-website/extensions/feelings">Feelings extension</a>. 
#         photo: images/projects/make-me-happy/make-me-happy-3.png 
#       - step: >
#           Step 3: With the Feelings extension we can get the mood or feeling our speech. 
#                   <img src = "https://imgur.com/zCwbCN7.png"/ class="wide-photo"> 
#       - step: >
#           Step 4: In order for our lights to know when to start analyzing our speech, we need to broadcast that we are done listening. So let's use a broadcast block and have the message be received by another block. 
#                   <img src = "https://imgur.com/WyCtYos.png"/ class="wide-photo">
#       - step: >
#           Step 5: Now instead of having the light colors change according to exactly what we're saying, we can have them change depending on if we're feeling positive (good), negative (bad), or neutral (somewhere in between).
#                   <img src = "https://imgur.com/4FFx4GP.png"/ class="wide-photo">  
#                   <br>
#                   Check out all the cool things you could do with smart lights!
#                   <img src = "https://imgur.com/h2Nnny5.png"/ class="wide-photo">    

# ghost2:
#   name: Bouncing Ghost
#   link: /projects/ghost2
#   short_intro: >
#     Make a ghost bounce everytime you blink.
#   description: >
#     Make a ghost bounce everytime you blink using a Muse headset and our Muse extension.
#   cover_photo: /images/ext-images/ghost.png
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=1eHvZJ1ITinJGjHq3QOX8KMhdCJF-KZgg
#     guide:
#       - step: >
#           Step 1: Start by loading the project.
#                   <img src = "https://imgur.com/2VPlDu7.png"/ class="wide-photo">
#       - step: >
#           Step 2: This project uses the <a href="/cognimates-website/extensions/muse">muse extension</a>.
#                   <img src = "https://imgur.com/3v5RMp2.jpg"/ class="wide-photo">
#       - step: >
#           Step 3: Click on the green flag. Your browser will ask if it is ok to show you notifications. Click allow and you should see a notification. Click on the notification to connect to your headset using Bluetooth.
#                   <img src = "https://imgur.com/YUIOvl0.png"/ class="wide-photo">
#       - step: >
#           Step 4: You should see a menu of Bluetooth devices appear. Select your Muse headset and click pair.
#                   <img src = "https://imgur.com/N36MOGk.png"/ class="wide-photo">
#       - step: >
#           Step 5: Now your Muse headset is connected to Cognimates! Try blinking and see how the ghost reacts! Change the numbers for the ghost's movement depending on how you want it to move.
#                   <img src = "https://imgur.com/xf3KSOP.png"/ class="wide-photo">


# giga:
#   name: Giga The Jukebox
#   link: /projects/giga
#   short_intro: >
#     Make Giga play a happy or sad song.
#   description: >
#     Make Giga play a happy or sad song by saying either a nice or mean thing to him.
#   cover_photo: /images/ext-images/giga.png
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=1YwqdWc5MsQwkHbksRCfFjrVNyjBL9pP0
#     guide:
#     - step: >
#         Step 1: Start by loading the project.
#                 <img src = "https://imgur.com/30UKMhc.png"/ class="wide-photo">
#     - step: >
#         Step 2: Click the green flag. Giga will ask what's that and you can say something nice or mean to him.
#                 <img src = "https://imgur.com/S4AcXMV.png"/ class="wide-photp">
#         Step 3: See how Giga reacts when you say mean or nice things!
# colorBeats:
#  name: Color Beats
#  link: /projects/colorBeats
#  short_intro: >
#    Make your own music and your own light show!
#  description: >
#    Using the music and smart lights extension you can choreograph and compose your own music and lightshow. 
#  cover_photo: /images/ext-images/color-beats-cover.png
#   video: >
#     <iframe src="https://giphy.com/embed/27IMHYUHRUHk51H43G" width="480" height="169" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
#  resources:
#    download_link: https://drive.google.com/uc?export=download&id=1ynsNdaqtkNSp4eFFFqB9xYthso_p5Hli
          
# starHunter:
#   name: Star Hunter
#   link: /projects/starHunter
#   short_intro: >
#     Play with your Microbit to help Kiran collect the stars.
#   description: >
#     Play with your microbit to see how Kiran reacts to you moving around. Now, try to use these actions to help her collect the stars. Find instructions for connecting to your Microbit at the Microbit extension page.
#   cover_photo: /images/ext-images/starHunter.png
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=1ndwzbPhyGjeUBBCY0Bk12z5kKIrb2nBP
#     guide:
#       - step: >
#           Step 1: Start by loading the project.
#                   <img src = "https://i.imgur.com/3LCr04F.png"/ class="wide-photo">
#       - step: >
#           Step 2: This project uses the <ahref="https://mitmedialab.github.io/cognimates-website/extensions/microbit">microbit extension</a>. It can detect shakes, jumps, movement, and button presses.
#                   <img src = "https://i.imgur.com/nuWZhJt.jpg"/ class="wide-photo">
#       - step: >
#           Step 3: Click the green flag and try shaking and tilting the Microbit to see how Kiran reacts.
#                   <img src = "https://i.imgur.com/Pk7abPn.png"/ class="wide-photo">
#       - step: >
#           Step 4: Now, try to collect the stars as quickly as possible.
                  
# microscope:
#   name: Dr.Microscope
#   link: /projects/microscope
#   short_intro: >
#     Play with Dr. Microscope and see what he knows.
#   description: >
#     Look through Dr. Microscope and see if he guesses what you're looking at. If he's wrong, teach him so he knows more in the future!
#   cover_photo: /images/ext-images/microscope.png
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=1Yj5ce7PNHiXZFfE-dFlYWj1mNXERlhzL
#     guide:
#     - step: >
#         Step 1: This project uses the <a href="/cognimates-website/extensions/vision">vision extension</a> and the <a href="/cognimates-website/extensions/video">video extension</a>. It can detect images based on trained models.
#             <img src = "https://imgur.com/NryZI8J.png"/ class="wide-photo">
#     - step: >
#         Step 2: Start by loading the project and clicking the green flag.
#             <img src = "https://imgur.com/wkMPEcz.png"/ class="wide-photo">
#     - step: >
#         Step 3: If you've made a webcam microscope, after you click on him you can press space to take a cool picture like the one on the right.
#             <img src = "https://imgur.com/VYmK6qy.png"/ class="wide-photo"><img src = "https://imgur.com/QJjIVU5.png"/ class="wide-photo">
#     - step: >
#         Step 4: If Dr.Microscope was wrong, don't worry! He'll send the picture you took with the rest of the pictures he has of that object that way he knows what it is next time. Here are a few images trained as Corn Stems in Dr. Microscope's brian.
#             <img src = "https://imgur.com/DGSZLdx.png"/ class="wide-photo">
#             <img src = "https://imgur.com/741wr1x.png"/ class="wide-photo"><img src = "https://imgur.com/KORi5Vw.png"/ class="wide-photo">
#     - step: >
#         Step 5: Now see what Dr. Microscope knows and what you can teach him! Here's an example using the live view of a wecbcam microscope.
#         <iframe src="https://giphy.com/embed/p3GtLTdUiRAISbYB36" width="492" height="406" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p><a href="http://www.giphy.com/gifs/p3GtLTdUiRAISbYB36"></a></p>

rpsCozmo:
  name: Rock, Paper, Scissors with Cozmo
  link: /projects/rpsCozmo
  short_intro: >
    Play Rock, Paper, Scissors with Cozmo!
  description: >
    Train your computer to play Rock, Paper, Scissors with you, and have Cozmo cheer you on! Make Cozmo react to the moves you make. For more information on connecting to Cozmo through Cognimates, check out the <a href="/cognimates-website/extensions/cozmo">Cozmo extension</a> page for more information.
  cover_photo: /images/ext-images/cozmorps.png
  video: >
    <iframe src="https://giphy.com/embed/fHcfIr6kyGSGZ20rfR" width="480" height="264" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p><a href="https://giphy.com/gifs/fHcfIr6kyGSGZ20rfR">via GIPHY</a></p>
  resources:
    download_link: https://drive.google.com/uc?export=download&id=1ISbQhtruPjh4h44mC39RvvZg3M6JXU2d
    # guide:
    #   - step: >
    #       Step 1: Load the simple version of Rock Paper Scissors with Cozmo. This project uses the <a href="/cognimates-website/extensions/vision">Vision extension</a>, which you can use to train a model and recognize images, and the <a href="/cognimates-website/extensions/cozmo">Cozmo extension</a>, which lets you program Cozmo. It's an adapted version of our <a href="/cognimates-website/projects/rock">Rock, Paper, Scissors project</a>, this time with Cozmo!
    #               <img src = "https://imgur.com/l89gZCG.png"/ class="wide-photo">  
    #   - step: >
    #       Step 2: Click the green flag to connect to Cozmo and hold your hand up to the webcam to play rock, paper, scissors with your computer! Press the space bar and wait for the 'pop' sound.
    #               <img src= "https://imgur.com/bUnHTVh.png"/ class="wide-photo">
    #   - step: >
    #       Step 3: Your computer will take a picture, attempt to recognize what move you played, and compare it to a move that the computer randomly chose.
    #               <img src= "https://imgur.com/HPRPCd0.png"/ class="wide-photo">
    #   - step: >
    #       Step 4: Once your move has been made, your code will make the hand on the right change to rock, paper, or scissor depending on which one the computer think you played. Cozmo will also say the move. </br>
    #               <img src= "https://imgur.com/b8oAyhV.png"/ class="wide-photo">
    #   - step: >
    #       Step 5: Cozmo's also going to react your result. If you won, it'll do a happy dance. If you lost, it'll look upset. Try adding an expression for Cozmo when the game is tied!
    #               <img src= "https://imgur.com/ESxcEGQ.png"/ class="wide-photo">  
    #   - step: >
    #       Step 6: If the computer was wrong and didn't recognize the correct hand that you played, you can train the model to become better. Check out steps 5-9 in the <a href="/cognimates-website/projects/rock">original Rock, Paper, Scissors project</a> on how to send your answers to the model!
    #   - step: >
    #       Step 7: If you want to create and train your own rock, paper, scissors model, head over to our <a href="https://cognimate.me:2635">training page</a> and create a vision training model!

# waterkinesis:
#   name: Waterkinesis
#   link: /projects/waterkinesis
#   short_intro: >
#     Control objects in water with your mind!
#   description: >
#     Connect a Lego Wedo and Muse EEG headset to control objects in water with your mind.
#   cover_photo: /images/ext-images/waterkinesis.png
#   resources:
#     download_link: https://drive.google.com/uc?export=download&id=17m-0_2dez_SugAyw-D55C3IbzbU9NRqC
#     guide:
#       - step: >
#           Step 1: Load the simple version of Waterkinesis <a href="https://drive.google.com/uc?export=download&id=1f5dMX3AF0_CWKYXIhKZvMQMEx44xGck-">here</a>. This project uses the <a href="/cognimates-website/extensions/muse">Muse extension</a>, which you can use to record your brain EEG values, and the Lego Wedo extension, which lets you program with a Lego Wedo.
#                   <img src = "https://imgur.com/lqEt77A.png"/ class="wide-photo"> 
#       - step: >
#           Step 2: Connect the Lego Wedo using the Scratch Device Manager, and load the Lego Wedo extension on Cognimates.
#                   <img src = "https://imgur.com/13OyNAN.png"/ class="wide-photo">
#       - step: >
#           Step 3: Click the green flag to connect to your Muse headset. Follow the notifications and pair your device with the Muse headset.
#                   <img src= "https://imgur.com/hFEZ4eT.png"/ class="wide-photo">
#       - step: >
#           Step 4: Once your headset is connected, watch the Lego Wedo change light colors based on your EEG values! The current threshold values are set to 100, but the best thresholds for you might be different. Click the “Get value of” blocks to see your EEG values and figure out what your thresholds should be. 
#                   <img src= "https://imgur.com/GVjyqHW.png"/ class="wide-photo">
#       - step: >
#           Step 5: Try adding movement blocks! Make the Wedo move forward and change directions depending on the side of your body that moved. </br>
#                   <img src= "https://imgur.com/gKFIHpi.png"/ class="wide-photo">
#       - step: >
#           Step 6: You can choose to move the Wedo on land, or try a water-based activity with this code! We recommend you place the Lego Wedo smarthub and motor in a waterproof box, drill a hole to the side of the box, and use a lego stick piece to connect a plastic propeller to the wedo motor. Test out other mechanical designs that you think will also work!
 



